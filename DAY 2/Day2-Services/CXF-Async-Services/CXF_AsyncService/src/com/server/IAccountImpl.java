
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.server;

import java.util.logging.Logger;
import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;

import org.apache.cxf.jaxws.ServerAsyncResponse;

/**
 * This class was generated by Apache CXF 2.6.8
 * 2013-06-22T00:22:03.507+05:30
 * Generated source version: 2.6.8
 * 
 */

@javax.jws.WebService(
                      serviceName = "AccountService",
                      portName = "AccountPort",
                      targetNamespace = "http://server.com/",
                      wsdlLocation = "bank.wsdl",
                      endpointInterface = "com.server.IAccount")
                      
public class IAccountImpl implements IAccount {

    private static final Logger LOG = Logger.getLogger(IAccountImpl.class.getName());

    /* (non-Javadoc)
     * @see com.server.IAccount#updateAsync(java.lang.String  arg0 )*
     */
    public Response<com.server.UpdateResponse> updateAsync(java.lang.String arg0) { 
       return null;
       /* not called */
    }

    /* (non-Javadoc)
     * @see com.server.IAccount#updateAsync(java.lang.String  arg0 ,)AsyncHandler<com.server.UpdateResponse>  asyncHandler )*
     */
    public Future<?> updateAsync(java.lang.String arg0,AsyncHandler<com.server.UpdateResponse> asyncHandler) { 
       return null;
       /* not called */
    }

    /* (non-Javadoc)
     * @see com.server.IAccount#update(java.lang.String  arg0 )*
     */
 // @UseAsyncMethod to support asynhronous invocation by server web container like Tomcat 7.0
    public void update(java.lang.String arg0) { 
        LOG.info("Executing operation update");
        System.out.println(arg0);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.server.IAccount#getDetailsAsync(double  arg0 ,)java.lang.String  arg1 )*
     */
    public Response<com.server.GetDetailsResponse> getDetailsAsync(double arg0,java.lang.String arg1) { 
       return null;
       /* not called */
    }

    /* (non-Javadoc)
     * @see com.server.IAccount#getDetailsAsync(double  arg0 ,)java.lang.String  arg1 ,)AsyncHandler<com.server.GetDetailsResponse>  asyncHandler )*
     */
    public Future<?> getDetailsAsync(double arg0,java.lang.String arg1,final AsyncHandler<com.server.GetDetailsResponse> asyncHandler) { 
    	LOG.info("Executing operation getDetailsAsync asynchronously on server..");
        System.out.println("Executing operation greetMeSometimeAsync asynchronously on server \n");
        final ServerAsyncResponse<GetDetailsResponse> r 
            = new ServerAsyncResponse<GetDetailsResponse>();
        new Thread() {
            public void run() {
            	System.out.println("Running the getDetailsAsync as thread on the server..");
            	GetDetailsResponse resp = new GetDetailsResponse();
                resp.setReturn(1234);
                r.set(resp);
                System.out.println("Responding on background thread\n");
                asyncHandler.handleResponse(r);
            }
        } .start();
        
        return r; 
    }
   
  

    /* (non-Javadoc)
     * @see com.server.IAccount#getDetails(double  arg0 ,)java.lang.String  arg1 )*
     */
    
   // @UseAsyncMethod to support asynhronous invocation by server web container like Tomcat 7.0
    public int getDetails(double arg0,java.lang.String arg1) { 
        LOG.info("Executing operation getDetails started on server..");
        System.out.println(arg0);
        System.out.println(arg1);
        int data =0;
        try {
            data = 1230;
            Thread.sleep(20000);
            return data;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();            
        }
        LOG.info("The operation getDetails over on server");
		return data;
    }

}
